apiVersion: networking.k8s.io/v1
kind: networking
metadata:
  name: default-deny
  namespace: default
spec:
    podSelector: {}
    policyTypes:
    - Ingress
    - Egress
---
# frontend policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend
  namespace: default
spec:
  podSelector:
    matchLabels:
      run: frontend
  policyTypes:
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              run: backend
---
allow only DNS resolution
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    name: deny
    namespace: default
spec:
    podSelector: {}
    policyTypes:
    - Egress
    - Ingress
    egress:
    - to:
      ports:
        - port: 53
          protocol: TCP
        - port: 53
          protocol: UDP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: backend
  namespace: default
spec:
  podSelector:
    matchLabels:
      run: backend
  policyTypes:
    - Egress
    - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          run: frontend
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              ns: cassandra
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
    name: cloud-metadata-allow
    namespace: default
spec:
    podSelector:
      matchLabels:
        role: metadata-accessor
    policyTypes:
    - Egress
    egress:
    - to:
      - ipBlock:
            cidr: 196.264.169.254/32
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: metadata-server
  namespace: default
spec:
  podSelector:
    matchLabels:
      trust: nope
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
        except:
          - 1.1.1.1/32
---
